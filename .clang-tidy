Checks: >
    -*,
    boost-*,
    bugprone-*,
    cert-*,
    clang-analyzer-*
    clang-diagnostic-*,
    cppcoreguidelines-*,
        -cppcoreguidelines-owning-memory,
        -cppcoreguidelines-avoid-magic-numbers,
    fuchsia-*,
        -fuchsia-default-arguments-calls,
    google-*,
    hicpp-*,
    misc-*,
    modernize-*,
        -modernize-use-trailing-return-type,
        -modernize-use-using,
    performance-*,
    portability-*,
    readability-*,
        -readability-implicit-bool-conversion

# CheckOptions:
#   - key:   readability-identifier-naming.ClassCase
#     value: CamelCase
#   - key:   readability-identifier-naming.ClassMemberCase
#     value: lower_case
#   - key:   readability-identifier-naming.EnumCase
#     value: CamelCase
#   - key:   readability-identifier-naming.EnumConstantCase
#     value: UPPER_CASE
#   - key:   readability-identifier-naming.FunctionCase
#     value: camelBack
#   - key:   readability-identifier-naming.GlobalConstantCase
#     value: CamelCase
#   - key:   readability-identifier-naming.StaticConstantCase
#     value: CamelCase
#   - key:   readability-identifier-naming.StaticVariableCase
#     value: CamelCase
#   - key:   readability-identifier-naming.MacroDefinitionCase
#     value: UPPER_CASE
#   - key:   readability-identifier-naming.MemberCase
#     value: lower_case
#   - key:   readability-identifier-naming.NamespaceCase
#     value: lower_case
#   - key:   readability-identifier-naming.ParameterCase
#     value: lower_case
#   - key:   readability-identifier-naming.TypeAliasCase
#     value: CamelCase
#   - key:   readability-identifier-naming.TypedefCase
#     value: CamelCase
#   - key:   readability-identifier-naming.VariableCase
#     value: lower_case
#   - key:   readability-identifier-naming.IgnoreMainLikeFunctions
#     value: 1
WarningsAsErrors: false
FormatStyle: google
